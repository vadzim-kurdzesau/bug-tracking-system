// <auto-generated />
using System;
using BugTrackingSystem.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BugTrackingSystem.Persistence.Migrations
{
    [DbContext(typeof(BugTrackingSystemContext))]
    [Migration("20220316141350_AddTriggers")]
    partial class AddTriggers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BugTrackingSystem.Persistence.Models.Bug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BugStatusId")
                        .HasColumnType("int")
                        .HasColumnName("bug_status_id");

                    b.Property<int>("BugTypeId")
                        .HasColumnType("int")
                        .HasColumnName("bug_type_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)")
                        .HasColumnName("description");

                    b.Property<int?>("DeveloperId")
                        .HasColumnType("int")
                        .HasColumnName("developer_id");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("BugStatusId");

                    b.HasIndex("BugTypeId");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("ProjectId");

                    b.ToTable("bugs");
                });

            modelBuilder.Entity("BugTrackingSystem.Persistence.Models.BugsAuditRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BugId")
                        .HasColumnType("int")
                        .HasColumnName("bug_id");

                    b.Property<int>("BugStatusId")
                        .HasColumnType("int")
                        .HasColumnName("bug_status_id");

                    b.Property<int>("BugTypeId")
                        .HasColumnType("int")
                        .HasColumnName("bug_type_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)")
                        .HasColumnName("description");

                    b.Property<int?>("DeveloperId")
                        .HasColumnType("int")
                        .HasColumnName("developer_id");

                    b.Property<string>("DeveloperMessage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("developer_message");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("BugStatusId");

                    b.HasIndex("BugTypeId");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("ProjectId");

                    b.ToTable("bugs_audit");
                });

            modelBuilder.Entity("BugTrackingSystem.Persistence.Models.BugStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("description");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(20)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("bug_statuses");
                });

            modelBuilder.Entity("BugTrackingSystem.Persistence.Models.BugType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("description");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(20)")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("bug_types");
                });

            modelBuilder.Entity("BugTrackingSystem.Persistence.Models.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(320)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(20)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(30)")
                        .HasColumnName("last_name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(20)")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.ToTable("developers");
                });

            modelBuilder.Entity("BugTrackingSystem.Persistence.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("name");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.HasKey("Id");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("projects_developers", b =>
                {
                    b.Property<int>("DevelopersId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectsId")
                        .HasColumnType("int");

                    b.HasKey("DevelopersId", "ProjectsId");

                    b.HasIndex("ProjectsId");

                    b.ToTable("projects_developers");
                });

            modelBuilder.Entity("BugTrackingSystem.Persistence.Models.Bug", b =>
                {
                    b.HasOne("BugTrackingSystem.Persistence.Models.BugStatus", "BugStatus")
                        .WithMany("Bugs")
                        .HasForeignKey("BugStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BugTrackingSystem.Persistence.Models.BugType", "BugType")
                        .WithMany("Bugs")
                        .HasForeignKey("BugTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BugTrackingSystem.Persistence.Models.Developer", "Developer")
                        .WithMany("Bugs")
                        .HasForeignKey("DeveloperId");

                    b.HasOne("BugTrackingSystem.Persistence.Models.Project", "Project")
                        .WithMany("Bugs")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BugStatus");

                    b.Navigation("BugType");

                    b.Navigation("Developer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("BugTrackingSystem.Persistence.Models.BugsAuditRecord", b =>
                {
                    b.HasOne("BugTrackingSystem.Persistence.Models.BugStatus", "BugStatus")
                        .WithMany()
                        .HasForeignKey("BugStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BugTrackingSystem.Persistence.Models.BugType", "BugType")
                        .WithMany()
                        .HasForeignKey("BugTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BugTrackingSystem.Persistence.Models.Developer", "Developer")
                        .WithMany()
                        .HasForeignKey("DeveloperId");

                    b.HasOne("BugTrackingSystem.Persistence.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BugStatus");

                    b.Navigation("BugType");

                    b.Navigation("Developer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("projects_developers", b =>
                {
                    b.HasOne("BugTrackingSystem.Persistence.Models.Developer", null)
                        .WithMany()
                        .HasForeignKey("DevelopersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BugTrackingSystem.Persistence.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BugTrackingSystem.Persistence.Models.BugStatus", b =>
                {
                    b.Navigation("Bugs");
                });

            modelBuilder.Entity("BugTrackingSystem.Persistence.Models.BugType", b =>
                {
                    b.Navigation("Bugs");
                });

            modelBuilder.Entity("BugTrackingSystem.Persistence.Models.Developer", b =>
                {
                    b.Navigation("Bugs");
                });

            modelBuilder.Entity("BugTrackingSystem.Persistence.Models.Project", b =>
                {
                    b.Navigation("Bugs");
                });
#pragma warning restore 612, 618
        }
    }
}
